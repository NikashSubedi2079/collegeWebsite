<?php

// Data functions (insert, update, delete, form) for table soe_gallery

// This script and data application were generated by AppGini 22.14
// Download AppGini for free from https://bigprof.com/appgini/download/

function soe_gallery_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('soe_gallery');
	if(!$arrPerm['insert']) return false;

	$data = [
		'event_name' => Request::val('event_name', ''),
		'year' => Request::val('year', ''),
		'file_photo' => Request::fileUpload('file_photo', [
			'maxSize' => 1024000,
			'types' => 'jpg|jpeg|gif|png|webp',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
				createThumbnail($name, getThumbnailSpecs('soe_gallery', 'file_photo', 'tv'));
				createThumbnail($name, getThumbnailSpecs('soe_gallery', 'file_photo', 'dv'));
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('soe_gallery', 'file_photo', Request::val('SelectedID'));
			},
		]),
		'file_video' => Request::fileUpload('file_video', [
			'maxSize' => 102400000,
			'types' => 'mov|avi|swf|asf|wmv|mpg|mpeg|mp4|flv',
			'noRename' => false,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('soe_gallery', 'file_video', Request::val('SelectedID'));
			},
		]),
		'youtube_link' => Request::val('youtube_link', ''),
		'year_calendar' => Request::fileUpload('year_calendar', [
			'maxSize' => 10240000,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'success' => function($name, $selected_id) {
			},
			'failure' => function($selected_id, $fileRemoved) {
				if(!strlen(Request::val('SelectedID'))) return '';

				/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
				return existing_value('soe_gallery', 'year_calendar', Request::val('SelectedID'));
			},
		]),
		'description' => Request::val('description', ''),
	];

	if($data['event_name'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Event name': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['year'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Year': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}

	// hook: soe_gallery_before_insert
	if(function_exists('soe_gallery_before_insert')) {
		$args = [];
		if(!soe_gallery_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('soe_gallery', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('soe_gallery', $recID, calculated_fields()['soe_gallery']);

	// hook: soe_gallery_after_insert
	if(function_exists('soe_gallery_after_insert')) {
		$res = sql("SELECT * FROM `soe_gallery` WHERE `id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!soe_gallery_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('soe_gallery', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) soe_gallery_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function soe_gallery_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function soe_gallery_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('soe_gallery', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: soe_gallery_before_delete
	if(function_exists('soe_gallery_before_delete')) {
		$args = [];
		if(!soe_gallery_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	sql("DELETE FROM `soe_gallery` WHERE `id`='{$selected_id}'", $eo);

	// hook: soe_gallery_after_delete
	if(function_exists('soe_gallery_after_delete')) {
		$args = [];
		soe_gallery_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='soe_gallery' AND `pkValue`='{$selected_id}'", $eo);
}

function soe_gallery_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('soe_gallery', $selected_id, 'edit')) return false;

	$data = [
		'event_name' => Request::val('event_name', ''),
		'year' => Request::val('year', ''),
		'file_photo' => Request::fileUpload('file_photo', [
			'maxSize' => 1024000,
			'types' => 'jpg|jpeg|gif|png|webp',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
				createThumbnail($name, getThumbnailSpecs('soe_gallery', 'file_photo', 'tv'));
				createThumbnail($name, getThumbnailSpecs('soe_gallery', 'file_photo', 'dv'));
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('soe_gallery', 'file_photo', $selected_id);
			},
		]),
		'file_video' => Request::fileUpload('file_video', [
			'maxSize' => 102400000,
			'types' => 'mov|avi|swf|asf|wmv|mpg|mpeg|mp4|flv',
			'noRename' => false,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('soe_gallery', 'file_video', $selected_id);
			},
		]),
		'youtube_link' => Request::val('youtube_link', ''),
		'year_calendar' => Request::fileUpload('year_calendar', [
			'maxSize' => 10240000,
			'types' => 'txt|doc|docx|docm|odt|pdf|rtf',
			'noRename' => true,
			'dir' => '',
			'id' => $selected_id,
			'success' => function($name, $selected_id) {
			},
			'removeOnRequest' => true,
			'remove' => function($selected_id) {
				// do nothing: preserve removed files on server.
			},
			'failure' => function($selected_id, $fileRemoved) {
				if($fileRemoved) return '';
				return existing_value('soe_gallery', 'year_calendar', $selected_id);
			},
		]),
		'description' => Request::val('description', ''),
	];

	if($data['event_name'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Event name': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['year'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Year': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	// get existing values
	$old_data = getRecord('soe_gallery', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: soe_gallery_before_update
	if(function_exists('soe_gallery_before_update')) {
		$args = ['old_data' => $old_data];
		if(!soe_gallery_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'soe_gallery', 
		backtick_keys_once($set), 
		['`id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="soe_gallery_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('soe_gallery', $data['selectedID'], calculated_fields()['soe_gallery']);

	// hook: soe_gallery_after_update
	if(function_exists('soe_gallery_after_update')) {
		$res = sql("SELECT * FROM `soe_gallery` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['id'];
		$args = ['old_data' => $old_data];
		if(!soe_gallery_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='soe_gallery' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function soe_gallery_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = false;

	// mm: get table permissions
	$arrPerm = getTablePermissions('soe_gallery');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return $Translation['tableAccessDenied'];

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='soe_gallery' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='soe_gallery' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return $Translation['tableAccessDenied'];
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `soe_gallery` WHERE `id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'soe_gallery_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
	}

	ob_start();
	?>

	<script>
		// initial lookup values

		jQuery(function() {
			setTimeout(function() {
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/soe_gallery_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/soe_gallery_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'VIEW/ADD/DELETE/UPDATE', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return soe_gallery_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return soe_gallery_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return soe_gallery_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm['delete'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['delete'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['delete'] == 3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#event_name').replaceWith('<div class=\"form-control-static\" id=\"event_name\">' + (jQuery('#event_name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#year').replaceWith('<div class=\"form-control-static\" id=\"year\">' + (jQuery('#year').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#file_photo').replaceWith('<div class=\"form-control-static\" id=\"file_photo\">' + (jQuery('#file_photo').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#file_video').replaceWith('<div class=\"form-control-static\" id=\"file_video\">' + (jQuery('#file_video').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#file_video, #file_video-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#youtube_link').replaceWith('');\n";
		$jsReadOnly .= "\tjQuery('#youtube_link, #youtube_link-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#year_calendar').replaceWith('<div class=\"form-control-static\" id=\"year_calendar\">' + (jQuery('#year_calendar').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#year_calendar, #year_calendar-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif($AllowInsert) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = [];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(event_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(year)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(file_photo)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="file_photo" id="file_photo" data-filetypes="jpg|jpeg|gif|png|webp" data-maxsize="1024000" accept=".jpg,.jpeg,.gif,.png,.webp">'), $templateCode);
	if($AllowUpdate && $row['file_photo'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(file_photo)%%>', '<br><input type="checkbox" name="file_photo_remove" id="file_photo_remove" value="1"> <label for="file_photo_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(file_photo)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(file_video)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="file_video" id="file_video" data-filetypes="mov|avi|swf|asf|wmv|mpg|mpeg|mp4|flv" data-maxsize="102400000" accept=".mov,.avi,.swf,.asf,.wmv,.mpg,.mpeg,.mp4,.flv">'), $templateCode);
	if($AllowUpdate && $row['file_video'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(file_video)%%>', '<br><input type="checkbox" name="file_video_remove" id="file_video_remove" value="1"> <label for="file_video_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(file_video)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(youtube_link)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(year_calendar)%%>', ($noUploads ? '' : "<div>{$Translation['upload image']}</div>" . '<i class="glyphicon glyphicon-remove text-danger clear-upload hidden"></i> <input type="file" name="year_calendar" id="year_calendar" data-filetypes="txt|doc|docx|docm|odt|pdf|rtf" data-maxsize="10240000" accept=".txt,.doc,.docx,.docm,.odt,.pdf,.rtf">'), $templateCode);
	if($AllowUpdate && $row['year_calendar'] != '') {
		$templateCode = str_replace('<%%REMOVEFILE(year_calendar)%%>', '<br><input type="checkbox" name="year_calendar_remove" id="year_calendar_remove" value="1"> <label for="year_calendar_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	} else {
		$templateCode = str_replace('<%%REMOVEFILE(year_calendar)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(description)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		$templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(event_name)%%>', safe_html($urow['event_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(event_name)%%>', html_attr($row['event_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(event_name)%%>', urlencode($urow['event_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(year)%%>', safe_html($urow['year']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(year)%%>', html_attr($row['year']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(year)%%>', urlencode($urow['year']), $templateCode);
		$row['file_photo'] = ($row['file_photo'] != '' ? $row['file_photo'] : 'blank.gif');
		if( $dvprint) $templateCode = str_replace('<%%VALUE(file_photo)%%>', safe_html($urow['file_photo']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(file_photo)%%>', html_attr($row['file_photo']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(file_photo)%%>', urlencode($urow['file_photo']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(file_video)%%>', safe_html($urow['file_video']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(file_video)%%>', html_attr($row['file_video']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(file_video)%%>', urlencode($urow['file_video']), $templateCode);
		$templateCode = str_replace('<%%VALUE(youtube_link)%%>', html_attr($row['youtube_link']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(youtube_link)%%>', urlencode($urow['youtube_link']), $templateCode);
		$templateCode = str_replace('<%%YOUTUBE(youtube_link)%%>', get_embed('youtube', $urow['youtube_link'], '480', '360'), $templateCode);
		$templateCode = str_replace('<%%YOUTUBETHUMB(youtube_link)%%>', thisOr(get_embed('youtube', $urow['youtube_link'], '480', '360', 'thumbnail_url'), 'blank.gif'), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(year_calendar)%%>', safe_html($urow['year_calendar']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(year_calendar)%%>', html_attr($row['year_calendar']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(year_calendar)%%>', urlencode($urow['year_calendar']), $templateCode);
		if($AllowUpdate || $AllowInsert) {
			$templateCode = str_replace('<%%HTMLAREA(description)%%>', '<textarea name="description" id="description" rows="5">' . safe_html(htmlspecialchars_decode($row['description'])) . '</textarea>', $templateCode);
		} else {
			$templateCode = str_replace('<%%HTMLAREA(description)%%>', '<div id="description" class="form-control-static">' . $row['description'] . '</div>', $templateCode);
		}
		$templateCode = str_replace('<%%VALUE(description)%%>', nl2br($row['description']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(description)%%>', urlencode($urow['description']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(event_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(event_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(year)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(year)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(file_photo)%%>', 'blank.gif', $templateCode);
		$templateCode = str_replace('<%%VALUE(file_video)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(file_video)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(youtube_link)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(youtube_link)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%YOUTUBE(youtube_link)%%>', '', $templateCode);
		$templateCode = str_replace('<%%YOUTUBETHUMB(youtube_link)%%>', 'blank.gif', $templateCode);
		$templateCode = str_replace('<%%VALUE(year_calendar)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(year_calendar)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%HTMLAREA(description)%%>', '<textarea name="description" id="description" rows="5"></textarea>', $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
			$templateCode.="\n\tif(document.getElementById('file_videoEdit')) { document.getElementById('file_videoEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('file_videoEditLink')) { document.getElementById('file_videoEditLink').style.display='none'; }";
			$templateCode.="\n\tif(document.getElementById('year_calendarEdit')) { document.getElementById('year_calendarEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('year_calendarEditLink')) { document.getElementById('year_calendarEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('soe_gallery');
	if($selected_id) {
		$jdata = get_joined_record('soe_gallery', $selected_id);
		if($jdata === false) $jdata = get_defaults('soe_gallery');
		$rdata = $row;
	}
	$templateCode .= loadView('soe_gallery-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: soe_gallery_dv
	if(function_exists('soe_gallery_dv')) {
		$args = [];
		soe_gallery_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}